// <auto-generated />
using System;
using Emparelhador.Contexto;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Emparelhador.Migrations
{
    [DbContext(typeof(AppContexto))]
    partial class AppContextoModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Emparelhador.Models.Jogador", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("JogadorTorneioid")
                        .HasColumnType("int");

                    b.Property<int?>("Torneioid")
                        .HasColumnType("int");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("vitorias")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("JogadorTorneioid");

                    b.HasIndex("Torneioid");

                    b.ToTable("jogadores");
                });

            modelBuilder.Entity("Emparelhador.Models.JogadorTorneio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("jogadorId")
                        .HasColumnType("int");

                    b.Property<int>("pontos")
                        .HasColumnType("int");

                    b.Property<int>("somaAdversarios")
                        .HasColumnType("int");

                    b.Property<int>("torneioId")
                        .HasColumnType("int");

                    b.Property<int>("vitorias")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("jogadorId");

                    b.HasIndex("torneioId");

                    b.ToTable("jogadoresTorneios");
                });

            modelBuilder.Entity("Emparelhador.Models.Mesa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("rodada")
                        .HasColumnType("int");

                    b.Property<int>("torneioID")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.HasIndex("torneioID");

                    b.ToTable("mesas");
                });

            modelBuilder.Entity("Emparelhador.Models.PontosJogadorMesa", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int?>("jogadorid")
                        .HasColumnType("int");

                    b.Property<int>("mesaid")
                        .HasColumnType("int");

                    b.Property<int>("pontos")
                        .HasColumnType("int");

                    b.Property<int>("posicao")
                        .HasColumnType("int");

                    b.Property<bool>("vitoria")
                        .HasColumnType("bit");

                    b.HasKey("id");

                    b.HasIndex("jogadorid");

                    b.HasIndex("mesaid");

                    b.ToTable("pontosJogadoresMesa");
                });

            modelBuilder.Entity("Emparelhador.Models.Torneio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("rodadas")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("torneios");
                });

            modelBuilder.Entity("Emparelhador.Models.Jogador", b =>
                {
                    b.HasOne("Emparelhador.Models.JogadorTorneio", null)
                        .WithMany("JogadoresVenceu")
                        .HasForeignKey("JogadorTorneioid");

                    b.HasOne("Emparelhador.Models.Torneio", null)
                        .WithMany("jogadores")
                        .HasForeignKey("Torneioid");
                });

            modelBuilder.Entity("Emparelhador.Models.JogadorTorneio", b =>
                {
                    b.HasOne("Emparelhador.Models.Jogador", "jogador")
                        .WithMany()
                        .HasForeignKey("jogadorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Emparelhador.Models.Torneio", "torneio")
                        .WithMany("tabela")
                        .HasForeignKey("torneioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("jogador");

                    b.Navigation("torneio");
                });

            modelBuilder.Entity("Emparelhador.Models.Mesa", b =>
                {
                    b.HasOne("Emparelhador.Models.Torneio", "torneio")
                        .WithMany()
                        .HasForeignKey("torneioID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("torneio");
                });

            modelBuilder.Entity("Emparelhador.Models.PontosJogadorMesa", b =>
                {
                    b.HasOne("Emparelhador.Models.Jogador", "jogador")
                        .WithMany()
                        .HasForeignKey("jogadorid");

                    b.HasOne("Emparelhador.Models.Mesa", "mesa")
                        .WithMany("pontosjogadores")
                        .HasForeignKey("mesaid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("jogador");

                    b.Navigation("mesa");
                });

            modelBuilder.Entity("Emparelhador.Models.JogadorTorneio", b =>
                {
                    b.Navigation("JogadoresVenceu");
                });

            modelBuilder.Entity("Emparelhador.Models.Mesa", b =>
                {
                    b.Navigation("pontosjogadores");
                });

            modelBuilder.Entity("Emparelhador.Models.Torneio", b =>
                {
                    b.Navigation("jogadores");

                    b.Navigation("tabela");
                });
#pragma warning restore 612, 618
        }
    }
}
